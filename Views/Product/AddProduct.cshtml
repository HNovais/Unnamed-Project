@using System.Security.Claims;

@model AddProductViewModel

<form asp-action="AddProduct" method="post" enctype="multipart/form-data">
    <input type="hidden" name="Store" value="@Model.Store" />
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Description"></label>
        <input asp-for="Description" class="form-control" />
    </div>

    <div class="form-group">
        <label for="category">Category:</label>
        <select class="form-control" id="category" name="Category">
            <option value=none></option>
            @foreach (var option in Model.Categories)
            {
                <option value="@option">@option</option>
            }
        </select>
    </div>

    <div id="features-container"></div>

    @section scripts {
        <script>
            $(function () {
                $('#category').change(function () {
                    var category = $(this).val();
                    if (category !== 'none') {
                        $.ajax({
                            url: '/Product/GetFeatures',
                            type: 'GET',
                            data: { category: category },
                            success: function (data) {
                                var features = $('<div>');

                                $.each(data, function (i, feature) {
                                    var featureItem = $('<div>');
                                    var label = $('<label>').text(feature).attr('for', 'Features[' + i + '].Values');
                                    var optionsList = $('<select>').attr('multiple', 'multiple').addClass('form-control').attr('name', 'Features[' + i + '].Values[]');
                                    var textInput = $('<input>').attr('type', 'text').addClass('form-control').attr('name', 'Features[' + i + '].EnteredValue');
                                    var index = $('<input>').attr('type', 'hidden').attr('name', 'Features[' + i + '].Index').val(i);

                                    $.ajax({
                                        url: '/Product/GetFeatureOptions',
                                        type: 'GET',
                                        data: { feature: feature },
                                        success: function (options) {
                                            if (options.length > 0) {
                                                $.each(options, function (i, option) {
                                                    optionsList.append($('<option>').text(option));
                                                });
                                                featureItem.append(optionsList);
                                            } else {
                                                featureItem.append(textInput.clone());
                                            }
                                        },
                                        error: function () {
                                            alert('An error occurred while retrieving options for feature ' + feature);
                                        }
                                    });

                                    featureItem.append(label)
                                    featureItem.append(index)
                                    features.append(featureItem);
                                });

                                $('#features-container').html(features);
                            },
                            error: function () {
                                alert('An error occurred while retrieving features.');
                            }
                        });
                    } else {
                        $('#features-container').empty();
                    }
                });
            });
        </script>
    }

    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" />
    </div>

    <div>
        <label>Quantities:</label>
        <div id="quantities-container">
            @if (Model.Quantities != null)
            {
                for (int index = 0; index < Model.Quantities.Count; index++)
                {
                    <div class="quantity-item">
                    <label>Type:</label>
                    @Html.TextBoxFor(m => Model.Quantities[index].Type, new { @class = "form-control", required = "required" })

                    <label>Quantity:</label>
                    @Html.TextBoxFor(m => Model.Quantities[index].Quantity, new { @class = "form-control", required = "required" })
                </div>
                }
            }
        </div>
        <button type="button" id="add-quantity-btn">Add Quantity</button>
    </div>

    <script>
        var addQuantityBtn = document.getElementById("add-quantity-btn");
        addQuantityBtn.addEventListener("click", function () {
            var count = document.querySelectorAll("#quantities-container .quantity-item").length;

            var html = '<div class="quantity-item">' +
                '<label>Type:</label>' +
                '<input type="text" class="form-control" name="Quantities[' + count + '].Type" required />' +
                '<label>Quantity:</label>' +
                '<input type="number" class="form-control" name="Quantities[' + count + '].Quantity" required />' +
                '</div>';

            var quantitiesContainer = document.getElementById("quantities-container");
            quantitiesContainer.insertAdjacentHTML("beforeend", html);
        });
    </script>

    <div>
        <input type="file" name="Icon" id="Icon">
        <div id="iconPreview"></div>
    </div>

    <div>
        <input type="file" name="Images" id="Images" multiple>
        <div id="imagePreview"></div>
    </div>
    
    <button type="submit" class="btn btn-primary">Add Product</button>

    <script>
        document.getElementById("Icon").addEventListener("change", function () {
            var previewContainer = document.getElementById("iconPreview");
            var file = this.files[0];
            var reader = new FileReader();

            reader.onload = function () {
                var image = new Image();
                image.src = this.result;
                image.className = "preview-image";
                previewContainer.innerHTML = "";
                previewContainer.appendChild(image);
            }

            reader.readAsDataURL(file);
        });

        document.getElementById("Images").addEventListener("change", function () {
            var previewContainer = document.getElementById("imagePreview");
            var files = this.files;

            while (previewContainer.firstChild) {
                previewContainer.removeChild(previewContainer.firstChild);
            }

            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var reader = new FileReader();

                reader.onload = function () {
                    var image = new Image();
                    image.src = this.result;
                    image.className = "preview-image";
                    previewContainer.appendChild(image);
                }

                reader.readAsDataURL(file);
            }
        });
    </script>

    <style>
        .preview-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            margin-right: 10px;
        }
    </style>

</form>

