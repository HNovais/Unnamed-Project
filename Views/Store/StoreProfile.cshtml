@using System.Security.Claims;

@model StoreProfileViewModel

<h1>@Model.Name</h1>
<p>@Model.Email</p>
<p>@User.Identity.Name</p>


@if (User.IsInRole("Store") && User.Identity.Name.ToLower() == Model.Name.ToLower())
{
    <form action="@Url.Action("EditProfile", "Store", new { storeUsername = User.Identity.Name })" method="get" >
        @Html.AntiForgeryToken()
        <button type="submit">Edit Profile</button>
    </form>
    @Html.ActionLink("Add Product", "AddProduct", "Product", new { storeUsername = Model.Name }, null)
}

@if (User.IsInRole("User"))
{
    if (@Model.UserReview == null)
    {
        <h2>Add Review</h2>
        <form asp-action="AddReview" asp-controller="Store">
            <input type="hidden" name="StoreUsername" value="@Model.Name" />
            <input type="hidden" name="UserUsername" value="@User.Identity.Name" />
            <div>
                <label for="rating">Rating:</label>
                <input type="number" name="Rating" min="1" max="5" required />
            </div>
            <div>
                <label for="comment">Comment:</label>
                <textarea name="Comment"></textarea>
            </div>
            <button type="submit">Submit Review</button>
        </form> 
    }
    
    else
    {
        <h2>Edit Review</h2>
        <form asp-action="EditReview" asp-controller="Store">
            <input type="hidden" name="StoreUsername" value="@Model.Name" />
            <input type="hidden" name="UserUsername" value="@User.Identity.Name" />
            <input type="hidden" name="ReviewId" value="@Model.UserReview.Id" />
            <div>
                <label for="rating">Rating:</label>
                <input type="number" name="Rating" min="1" max="5" value="@Model.UserReview.Rating" required />
            </div>
            <div>
                <label for="comment">Comment:</label>
                <textarea name="Comment">@Model.UserReview.Comment</textarea>
            </div>
            <button type="submit">Update Review</button>
        </form>
    }
}


<h2>Reviews</h2>

@if(Model.UserReview != null)
{
    <h3>User Review</h3>

    <div class="userReview">
        <p>Rating: @Model.UserReview.Rating</p>
        <p>Comment: @Model.UserReview.Comment</p>
        <p>Posted on: @Model.UserReview.ReviewDate</p>
    </div>
}

@foreach (var review in Model.Reviews)
{
    <div class="review">
        <p>Rating: @review.Rating</p>
        <p>Reviewer: @review.Reviewer</p>
        <p>Comment: @review.Comment</p>
        <p>Posted on: @review.ReviewDate</p>
    </div>
}

<h2>Products</h2>

@foreach (var product in Model.Products)
{
    <div class="product">
        <a href="@Url.Action("ProductPage", "Product", new { productId = product.Id , storeName = Model.Name})">
            <img src="@Url.Content("~/Images/" + Model.Name + "/" + product.Icon)" width="250px" height="250px" />
        </a>
        <p>@product.Name @product.Price€</p>
        @if (User.Identity.Name.ToLower() == Model.Name.ToLower())
        {
            <a href="@Url.Action("EditProduct", "Product", new { productId = product.Id, storeName = Model.Name })">Edit</a>
            <form action="@Url.Action("DeleteProduct", "Product", new { productId = product.Id, storeName = Model.Name })" method="post" onsubmit="return confirm('Are you sure you want to delete this product?');">
                @Html.AntiForgeryToken()
                <input type="hidden" name="productId" value="@product.Id" />
                <button type="submit">Delete</button>
            </form>
        }
    </div>
}